fl.block.mismatch.inspection.close.block=''{1}'' does not match ''{0}'' from block start
fl.block.mismatch.inspection.missing.end.block=''{0}'' block not closed
fl.block.mismatch.inspection.missing.start.block=No block start for ''{0}''
fl.block.mismatch.inspection.open.block=''{0}'' does not match ''{1}'' from block end
fl.block.mismatch.inspection.empty.block=Block helper {0} usually requires a parameter

fl.block.mismatch.intention.rename.close=Change block end ''{0}'' to ''{1}''
fl.block.mismatch.intention.rename.open=Change block start ''{0}'' to ''{1}''
fl.files.file.type.description=TYPO3 Fluid Template
fl.page.colors.descriptor.comments.key=Comments
fl.page.colors.descriptor.data.prefix.key=Data Prefix
fl.page.colors.descriptor.escape.key=Escape Character
fl.page.colors.descriptor.identifiers.key=Identifiers
fl.page.colors.descriptor.mustaches.key=Mustaches
fl.page.colors.descriptor.operators.key=Operators
fl.page.colors.descriptor.strings.key=Strings
fl.page.colors.descriptor.values.key=Primitives
fl.page.options.commenter.language=&Language for comments\:
fl.page.options.commenter.language.tooltip=Controls which language's comment syntax to use for "Comment with Block Comment" and "Comment with Line Comment" actions
fl.pages.folding.auto.collapse.blocks=Handlebars/Mustache blocks
fl.pages.options.formatter=&Enable formatting
fl.pages.options.generate.closing.tag=&Automatically insert closing tag
fl.pages.options.complete.close.mustache=Autocomplete close &mustaches
fl.pages.options.complete.close.tooltip=Insert close mustache ("}}" or "}}}") when first "}" is typed
fl.pages.options.title=Handlebars/Mustache
fl.pages.options.html.as.hb=&Open HTML files as Handlebars/Mustache
fl.parsing.comment.unclosed=Unclosed comment
fl.parsing.element.expected.boolean=Expected "true" or "false"
fl.parsing.element.expected.close=Expected Close "}}"
fl.parsing.element.expected.close.unescaped=Expected Close "}}}"
fl.parsing.element.expected.comment=Expected a Comment
fl.parsing.element.expected.comment.content=Expected a Comment text
fl.parsing.element.expected.comment.close=Expected Comment Close "}}" or "--}}"
fl.parsing.element.expected.comment.open=Expected Comment Open "{{" or "{{--"
fl.parsing.element.expected.content=Expected Template Content
fl.parsing.element.expected.data=Expected a Data identifier
fl.parsing.element.expected.equals=Expected Equals "="
fl.parsing.element.expected.id=Expected an ID
fl.parsing.element.expected.integer=Expected an Integer
fl.parsing.element.expected.invalid=Unexpected token
fl.parsing.element.expected.open=Expected Open "{{"
fl.parsing.element.expected.open_block=Expected Open Block "{{#"
fl.parsing.element.expected.open_end_block=Expected Open End Block "{{/"
fl.parsing.element.expected.open_inverse=Expected Open Inverse "{{^"
fl.parsing.element.expected.open_inverse_chain=Expected Open Inverse Chain "{{else"
fl.parsing.element.expected.open_partial=Expected Open Partial "{{>"
fl.parsing.element.expected.open_partial_block=Expected Open Partial Block "{{#>"
fl.parsing.element.expected.open_raw_block=Expected Open Raw Block "{{{{"
fl.parsing.element.expected.end_raw_block=Expected End Raw Block "{{{{/"
fl.parsing.element.expected.close_raw_block=Expected Close Raw Block "}}}}"
fl.parsing.element.expected.open_unescaped=Expected Open Unescaped "{{{"
fl.parsing.element.expected.open_sexpr=Expected Open Subexpression "("
fl.parsing.element.expected.close_sexpr=Expected Close Subexpression ")"
fl.parsing.element.expected.open_block_params=Expected Open Block Param "as |"
fl.parsing.element.expected.close_block_params=Expected Close Block Param "|"
fl.parsing.element.expected.outer_element_type=Expected Handlebars Content
fl.parsing.element.expected.separator=Expected a Separator "/" or "."
fl.parsing.element.expected.string=Expected a String
fl.parsing.element.expected.white_space=Expected White Space
fl.parsing.expected.hash=Expected a hash
fl.parsing.expected.parameter=Expected a parameter
fl.parsing.expected.partial.name=Expected partial name
fl.parsing.expected.path.or.data=Expected a path, String, Number, Boolean or @data
fl.parsing.unexpected.decorator.inverse=Unexpected inverse block on decorator
fl.parsing.invalid=Invalid
inspections.group.name=Handlebars/Mustache
handlebars.inspections.helpers.empty=Handlebars empty block helper inspection
